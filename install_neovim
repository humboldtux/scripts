#!/bin/bash

source  ${HOME}/.bash_functions

#SETUP
if [[ $1 == '-u' ]];then
  WGET='wget -q -N' # only download if version is newer
  #PACKER_CMD='PackerSync'
else
  WGET='wget -q --no-clobber' #only download if file does not exist
  #PACKER_CMD='PackerInstall'
fi

${WGET} https://github.com/neovim/neovim/releases/download/stable/nvim.appimage -O ${HOME}/.local/bin/nvim
chmod +x ${HOME}/.local/bin/nvim

if [[ ! -d "${HOME}/.local/share/nvim/site/pack/packer/start/packer.nvim" ]]; then
  echo "Installation plugin packer"
  git clone --depth 1 https://github.com/wbthomason/packer.nvim \
  ${HOME}/.local/share/nvim/site/pack/packer/start/packer.nvim
elif [[ $1 == '-u' ]]; then
  cd ${HOME}/.local/share/nvim/site/pack/packer/start/packer.nvim
  git pull
fi

#nvim --headless -c 'autocmd User PackerComplete quitall' -c "${PACKER_CMD}"

echo "installation Rust LSP"
curl -s -L https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/rust-analyzer-x86_64-unknown-linux-gnu.gz \
  --output - | gunzip > ${HOME}/.local/bin/rust-analyzer
chmod u+x ${HOME}/.local/bin/rust-analyzer

echo "installation Clang LSP"
VERSION=`github_get_latest_version clangd/clangd`
wget -q https://github.com/clangd/clangd/releases/latest/download/clangd-linux-${VERSION}.zip  -O /tmp/clangd.zip
unzip -j -x /tmp/clangd.zip clangd_*/bin/clangd -d ${HOME}/.local/bin/

echo "installation Lua LSP"
nix-env -i sumneko-lua-language-server && sudo ln -s ${HOME}/.nix-profile/bin/lua-language-server /usr/local/bin/.

echo "Installation yaml LSP"
npm install --global yarn
yarn global add yaml-language-server
asdf reshim nodejs
