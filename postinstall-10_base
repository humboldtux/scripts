#!/bin/bash

CODENAME=`lsb_release -sc`

if [[ ! -f "/etc/apt/sources.list.d/backports.list" ]]; then
  echo "Activation des dépôts backports"
  echo "deb http://deb.debian.org/debian ${CODENAME}-backports main contrib non-free" | sudo tee -a /etc/apt/sources.list.d/backports.list
  sudo apt-get update > /dev/null ; sudo apt-get upgrade -y > /dev/null
fi

PKGS="sudo vim git curl tig rdiff-backup backupninja gdebi pdftk rsync \
  firmware-linux-free firmware-linux-nonfree firmware-linux \
  python3-ldap ldap-utils mariadb-client newsboat dkms openvpn detox \
  kitty kitty-terminfo python3-venv python3-pil python3-pip jq linux-headers-amd64 ruby-dev \
  atool unrar odt2txt w3m poppler-utils ranger tcpdump tshark libssl-dev pkg-config samba-common xorriso"

echo "Installation APT: ${PKGS}"
sudo apt-get -y install ${PKGS} > /dev/null

python3 -m pip install --user pipx > /dev/null
export PATH="$PATH:${HOME}/.local/bin"

PIPX_PKGS="gita updog pywal mdcat youtube-dl diffoscope"
echo "Installation logiciels pipx: ${PIPX_PKGS}"
for PKG in ${PIPX_PKGS}; do
  if [[ ! -d "${HOME}/.local/pipx/venvs/${PKG}" ]];then
    pipx install ${PKG} > /dev/null
  fi
done
if [[ ! -f "/etc/bash_completion.d/gita" ]]; then
  sudo wget -q https://raw.githubusercontent.com/nosarthur/gita/master/.gita-completion.bash -O /etc/bash_completion.d/gita
fi
PATH=${HOME}/.local/bin:${PATH}

if [[ ! -d "${HOME}/.local/share/fonts/NerdFonts" ]];then
  echo "Installing Nerd Fonts"
  git clone -q --depth 1 https://github.com/ryanoasis/nerd-fonts.git /tmp/nerd-fonts > /dev/null && \
    cd /tmp/nerd-fonts && \
    ./install.sh JetBrainsMono > /dev/null
fi

if [[ ! -f "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]];then
  echo "Installation nix"
  curl -sSL https://nixos.org/nix/install | sh
. ${HOME}/.nix-profile/etc/profile.d/nix.sh
fi
NIX_PKGS="bash-completion bat broot direnv docker-compose dust ffmpegthumbnailer \
  fzf icdiff miller navi neovim starship viu xsv ripgrep grex yadm zoxide"

sudo -E sh -c 'echo 1 > /proc/sys/vm/overcommit_memory' # probleme memoire
for PKG in ${NIX_PKGS}; do
  if [[ ! -L "${HOME}/.nix-profile/bin/${PKG}" ]]; then
    echo "Installation pkg nix ${PKG}"
    nix-env --quiet -i ${PKG} > /dev/null
  fi
done
if [[ ! -f "${HOME}/.config/broot/launcher/bash/br" ]];then
  broot --install
fi

if [[ ! -d "${HOME}/.asdf" ]];then
  echo "Installation ASDF"
  git clone https://github.com/asdf-vm/asdf.git ${HOME}/.asdf > /dev/null && cd ${HOME}/.asdf && git checkout "$(git describe --abbrev=0 --tags)" > /dev/null
  . "${HOME}/.asdf/asdf.sh"
fi
echo "Installation plugins ASDF"
ASDF_PLUGINS="golang rust"
for PLUGIN in ${ASDF_PLUGINS}; do
  asdf plugin add ${PLUGIN} > /dev/null
  asdf install ${PLUGIN} latest > /dev/null
  printf "ASDF: Installation version"
  asdf global ${PLUGIN} `asdf latest ${PLUGIN}` > /dev/null
done

echo "Installation pkgs cargo"
CARGO_PKGS="exa"
for PKG in ${CARGO_PKGS}; do
  cargo -q install ${PKG}
done
asdf reshim rust

PKGS_GO="github.com/akavel/up"
echo "Installation go get"
for PKG in ${PKGS_GO}; do
  go get ${PKG}
done

if [[ ! -d ${HOME}/dev/src/github.com/humboldtux ]]; then
  mkdir -p ${HOME}/{bin,dev,pkg} \
    ${HOME}/dev/src/github.com/humboldtux
fi

if ! dpkg-query -W -f='${Status}' sysdig > /dev/null
then
  echo "Installation sysdig"
  curl -sSL https://s3.amazonaws.com/download.draios.com/stable/install-sysdig | sudo bash
fi

if ! dpkg-query -W -f='${Status}' docker-ce > /dev/null
then
  echo "Installation Docker"
  curl -sSL https://get.docker.com/ | sh
  sudo usermod -aG docker $USER > /dev/null
  sudo systemctl -q enable docker
  sudo systemctl -q restart docker
fi

if [[ ! -f "/etc/apt/sources.list.d/microsoft.list" ]]; then
  echo "Installation Powershell"
  curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
  echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-${CODENAME}-prod ${CODENAME} main" | sudo tee -a /etc/apt/sources.list.d/microsoft.list
fi
sudo apt-get update > /dev/null ; sudo apt-get install -y powershell gss-ntlmssp > /dev/null

if [[ ! -d "${HOME}/.config/yadm/repo.git" ]];then
  echo "Installation Yadm"
  yadm clone "https://github.com/humboldtux/dotfiles.git" > /dev/null
fi

if [[ ! -d "${HOME}/.cache/wal" ]];then
  wal -q --theme vscode
fi

vim_pluginstall
