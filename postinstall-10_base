#!/bin/bash

if [[ ! -f "/etc/apt/sources.list.d/backports.list" ]]; then
  echo "activation des dépôts backports"
  echo "deb http://deb.debian.org/debian buster-backports main contrib non-free" | sudo tee -a /etc/apt/sources.list.d/backports.list
  sudo apt update && sudo apt upgrade -y
fi
PKGS="sudo vim git curl tig rdiff-backup backupninja gdebi pdftk rsync \
  firmware-linux-free firmware-linux-nonfree firmware-linux \
  python-ldap ldap-utils mariadb-client newsbeuter \
  kitty kitty-terminfo pipx python3-venv python3-pil \
  atool unrar odt2txt w3m linuxbrew-wrapper poppler-utils ranger libssl-dev pkg-config"

sudo apt -y install ${PKGS}

PIPX_PKGS="gita updog pywal mdcat youtube-dl"
echo "Installation logiciels pipx: ${PIPX_PKGS}"
for PKG in ${PIPX_PKGS}; do
  if [[ ! -d "${HOME}/.local/pipx/venvs/${PKG}" ]];then
    pipx install ${PKG}
  fi
done
if [[ ! -f "/etc/bash_completion.d/gita" ]]; then
  sudo wget https://raw.githubusercontent.com/nosarthur/gita/master/.gita-completion.bash -O /etc/bash_completion.d/gita
fi
PATH=${HOME}/.local/bin:${PATH}

echo "Installing Nerd Fonts"
if [[ ! -d "${HOME}/.local/share/fonts/NerdFonts" ]];then
  git clone --depth 1 https://github.com/ryanoasis/nerd-fonts.git /tmp/nerd-fonts && \
    cd /tmp/nerd-fonts && \
    ./install.sh JetBrainsMono
fi

echo "Installation nix"
if [[ ! -f "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]];then
  curl -L https://nixos.org/nix/install | sh
fi
. ${HOME}/.nix-profile/etc/profile.d/nix.sh
NIX_PKGS="bash-completion bat broot direnv docker-compose dust exa ffmpegthumbnailer \
  fzf icdiff miller navi neovim starship viu xsv \
  yadm zoxide"

sudo -E sh -c 'echo 1 > /proc/sys/vm/overcommit_memory' # probleme memoire
echo "Installation pkg nix"
for PKG in ${NIX_PKGS}; do
  if [[ ! -L "${HOME}/.nix-profile/bin/${PKG}" ]]; then
    nix-env -i ${PKG}
  fi
done
if [[ ! -f "${HOME}/.config/broot/launcher/bash/br" ]];then
  broot --install
fi

echo "Installation ASDF"
if [[ ! -d "${HOME}/.asdf" ]];then

  git clone https://github.com/asdf-vm/asdf.git ${HOME}/.asdf && cd ${HOME}/.asdf && git checkout "$(git describe --abbrev=0 --tags)"
fi
echo "Installation plugins ASDF"
. "${HOME}/.asdf/asdf.sh"
ASDF_PLUGINS="golang rust"
for PLUGIN in ${ASDF_PLUGINS}; do
  asdf plugin add ${PLUGIN}
  asdf install ${PLUGIN} latest
  echo "ASDF: Installation version"
  asdf global ${PLUGIN} `asdf latest ${PLUGIN}`
done

PKGS_GO="github.com/tomnomnom/gron"
echo "Installation pkgs go"
for PKG in ${PKGS_GO}; do
  go get -v ${PKG}
done

echo "Installation pkgs cargo"
CARGO_PKGS="tealdeer ripgrep"
for PKG in ${CARGO_PKGS}; do
  cargo install ${PKG}
done
asdf reshim rust

if [[ ! -d ${HOME}/dev/src/github.com/humboldtux ]]; then
  mkdir -p ${HOME}/{bin,dev,pkg} \
    ${HOME}/dev/src/github.com/humboldtux
fi

echo "Installation Docker"
if ! dpkg-query -W -f='${Status}' docker-ce  | grep "ok installed"
then
  curl -sSL https://get.docker.com/ | sh
fi
sudo usermod -aG docker $USER
sudo systemctl enable docker
sudo systemctl restart docker

echo "Installation sysdig"
if ! dpkg-query -W -f='${Status}' sysdig  | grep "ok installed"
then
  curl -s https://s3.amazonaws.com/download.draios.com/stable/install-sysdig | sudo bash
fi

echo "Installation Powershell"
curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
if [[ ! -f "/etc/apt/sources.list.d/microsoft.list" ]]; then
  sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-buster-prod buster main" > /etc/apt/sources.list.d/microsoft.list'
fi
sudo apt update && sudo apt install -y powershell

if [[ ! -d "${HOME}/.config/yadm/repo.git" ]];then
  YADM="https://github.com/humboldtux/dotfiles.git"
  yadm upgrade ${YADM} || yadm clone ${YADM}
fi
if [[ ! -d "${HOME}/.cache/wal" ]];then
  wal --theme vscode
fi

vim_pluginstall
